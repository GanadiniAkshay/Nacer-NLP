
Express augments the request and response objects that you're passed in every request handler. The old stuff is still there, but Express adds some new stuff too! The API docs (at http://expressjs.com/api.html) explain everything, but let's look at a couple of examples.

One nicety Express offers is a redirect method. Listing 3.12 shows how the redirect method might work:

Listing 3.12 Using redirect

If we were just using Node, response would have no method called redirect; Express adds it to the response object for us. You can do this in vanilla Node, but it's a lot more code.

Express also adds methods like sendFile which lets you just send a whole file:

Listing 3.13 sendFile example

Once again, the sendFile method isn't available in vanilla Node; Express adds it for us. And just like the redirect example above, you can do this in vanilla Node, but it's a lot more code.

It's not just the response object that gets conveniences—the request object gets a number of other cool properties and methods, like request.ip to get the IP address and request.files to get the files uploaded by the user (if there are any).

Let's use some of these things to build some middleware that blocks an evil IP address. Express makes this pretty easy:

Listing 3.14 Blacklisting an IP

Notice that we're using req.ip, a function called res.status(), and res.send(). None of these are built into vanilla Node—they're all extensions added by Express.

Conceptually, there's not much to know here, other than the fact that Express extends the request and response.

We've looked at a few niceties in this chapter, but I don't want to give you the full laundry list here. For every nice feature that Express gives you, check out its API documentation at http://expressjs.com/4x/api.html.
Extending request and response