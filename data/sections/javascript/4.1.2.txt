4.1.2. The this parameter: introducing the function context
When a function is invoked, in addition to the parameters that represent the explicit arguments provided in the function call, an implicit parameter named this is passed to the function. The this parameter, a vital ingredient in object-oriented JavaScript, refers to an object that’s associated with the function invocation. For this reason, it’s often termed the function context.
The function context is a notion that those coming from object-oriented languages such as Java might think that they understand. In such languages, this usually points to an instance of the class within which the method is defined.
But beware! As we’ll soon see, in JavaScript, invoking a function as a method is only one way that a function can be invoked. And as it turns out, what the this parameter points to isn’t (as in Java or C#) defined only by how and where the function is defined; it can also be heavily influenced by how the function is invoked. Because understanding the exact nature of the this parameter is one of the most important pillars of object-oriented JavaScript, we’re about to look at various ways of invoking functions. You’ll see that one of the primary differences between them is how the value of this is determined. And then we’ll take a long and hard look at function contexts again in several following chapters, so don’t worry if things don’t gel right away.
Now let’s see, in great detail, how functions can be invoked.
